<%- max_image_count = options[:maximum_amount_of_images] || options[:max_images] -%>
<div class="content_editor">
	<label><%= t("picture_gallery_editor.#{element.name}", :default => t('picture_gallery_editor')) %></label>
	<div class="picture_gallery_images" id="element_<%= element.id %>_contents">
		<%- picture_contents.each do |picture_content| -%>
			<%= render_essence_editor(picture_content, {
				:dragable => (picture_contents.size > 1)
			}.merge(options)) %>
		<%- end -%>
		<%- if max_image_count.blank? || picture_contents.length < max_image_count.to_i -%>
			<%= render(
				:partial => 'alchemy/admin/elements/add_content',
				:locals => {
					:element => element,
					:essence_type => "Alchemy::EssencePicture",
					:link_text => t("add_image_to_element"),
					:options => options,
					:dragable => (picture_contents.size > 1)
				}
			) %>
		<%- end -%>
	</div>
</div>
<%- if picture_contents.size > 1 -%>
<script type="text/javascript" charset="utf-8">
	Alchemy.SortableContents('#element_<%= element.id %>_contents', '<%= form_authenticity_token %>');
</script>
<%- end -%>
