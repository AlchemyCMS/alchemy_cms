<% content_for(:title) { @page.name } %>

<% content_for(:main_menu_style) { 'collapsed-menu' } %>

<% content_for(:toolbar) do %>
<div class="toolbar_buttons">
  <div class="button_with_label">
    <%= form_tag alchemy.unlock_admin_page_path(@page, redirect_to: @layoutpage ? alchemy.admin_layoutpages_path : alchemy.admin_pages_path), id: 'unlock_page_form' do %>
      <button class="icon_button" title="<%= Alchemy.t(:explain_unlocking) %>" data-alchemy-hotkey="alt+x">
        <%= render_icon('expand-left') %>
      </button>
      <label><%= Alchemy.t(:unlock_page) %></label>
    <% end %>
  </div>
  <div class="toolbar_spacer"></div>
  <div class="button_with_label">
    <%= link_to_dialog(
      render_icon(:information),
      alchemy.info_admin_page_path(@page),
      {
        title: Alchemy.t(:page_infos),
        size: '520x320'
      },
      {
        class: 'icon_button',
        'data-alchemy-hotkey' => 'alt+i'
      }
    ) %>
    <label><%= Alchemy.t(:page_infos) %></label>
  </div>
  <div class="button_with_label">
    <% if @page.layoutpage? %>
      <%= link_to_dialog(
        render_icon("settings-3"),
        alchemy.edit_admin_layoutpage_path(@page),
        {
          title: Alchemy.t(:edit_page_properties),
          size: '450x170'
        },
        class: :icon_button,
        title: Alchemy.t(:edit_page_properties),
        'data-alchemy-hotkey' => 'alt+e'
      ) %>
    <% else %>
      <%= link_to_dialog(
        render_icon("settings-3"),
        alchemy.configure_admin_page_path(@page),
        {
          title: Alchemy.t(:edit_page_properties),
          size: '450x680'
        },
        class: :icon_button,
        title: Alchemy.t(:edit_page_properties),
        'data-alchemy-hotkey' => 'alt+e'
      ) %>
    <% end %>
    <label><%= Alchemy.t(:page_properties) %></label>
  </div>
  <div class="button_with_label">
    <%= form_tag alchemy.publish_admin_page_path(@page), id: 'publish_page_form' do %>
      <%= button_tag class: 'icon_button', disabled: cannot?(:publish, @page) do %>
        <%= render_icon('upload-cloud-2') %>
      <% end %>
      <label>
        <% if @page.language.public? %>
          <%= Alchemy.t(:explain_publishing) %>
        <% elsif @page.editable_by?(current_alchemy_user) %>
          <%= Alchemy.t(:publish_page_language_not_public) %>
        <% else %>
          <%= Alchemy.t(:publish_page_not_allowed) %>
        <% end %>
      </label>
    <% end %>
  </div>
  <% unless @page.layoutpage? %>
    <div class="button_with_label">
      <% if @page.public? %>
        <%= link_to show_page_url(
              urlname: @page.urlname,
              locale: prefix_locale? ? @page.language_code : nil,
              host: @page.site.host == "*" ? request.host : @page.site.host,
            ),
            title: Alchemy.t("Visit page"),
            data: { turbo: false },
            target: "_blank",
            class: 'icon_button' do %>
          <%= render_icon('external-link') %>
        <% end %>
        <label><%= Alchemy.t("Visit page") %></label>
      <% else %>
        <%= content_tag "a",
            title: Alchemy.t(:cannot_visit_unpublic_page),
            class: 'disabled icon_button' do %>
          <%= render_icon('external-link') %>
        <% end %>
        <label><%= Alchemy.t(:cannot_visit_unpublic_page) %></label>
      <% end %>
    </div>
  <% end %>
  <div class="toolbar_spacer"></div>
  <div class="select_with_label">
    <label><%= Alchemy.t(:preview_size) %></label>
    <%= select_tag 'preview_size',
      preview_sizes_for_select,
      class: 'medium', is: 'alchemy-select' %>
  </div>
  <div class="toolbar_spacer"></div>
  <% if @preview_urls.many? %>
    <div class="select_with_label">
      <label><%= Alchemy.t(:preview_url) %></label>
      <%= select_tag 'preview_url',
        options_for_select(@preview_urls),
        class: 'large', is: 'alchemy-select' %>
    </div>
  <% end %>
  <div class="button_with_label">
    <%= link_to render_icon(:refresh), nil, {
      title: Alchemy.t('Reload Preview'),
      class: 'icon_button',
      id: 'reload_preview_button'
    } %>
    <label><%= Alchemy.t('Reload Preview') %></label>
  </div>
</div>
<div class="toolbar_buttons right">
  <div class="button_with_label" id="element_window_button">
    <%= link_to render_icon("menu-unfold"), nil, {
      title: Alchemy.t(:hide_elements),
      class: 'icon_button'
    } %>
    <label><%= Alchemy.t(:hide_elements) %></label>
  </div>
</div>
<% end %>

<% content_for :javascripts do %>

<% content_for :javascript_includes do %>
  <meta name="turbo-cache-control" content="no-cache">
<% end %>

<script type="text/javascript" charset="utf-8">
  $(document).one('turbo:load', function() {
    $('#unlock_page_form, #publish_page_form').on('submit', function(event) {
      var not_dirty = Alchemy.checkPageDirtyness(this);
      if (!not_dirty) Alchemy.pleaseWaitOverlay(false);
      return not_dirty;
    });
    Alchemy.PagePublicationFields();
    Alchemy.PageLeaveObserver();
    Alchemy.ElementsWindow.init('<%= alchemy.admin_elements_path(page_version_id: @page_version.id) %>', {
      texts: {
        title: '<%= Alchemy.t("Elements") %>',
        dirtyTitle: '<%= Alchemy.t("Warning!") %>',
        dirtyMessage: '<%= Alchemy.t(:element_dirty_close_window_notice) %>',
        ok_label: '<%= Alchemy.t("Yes") %>',
        cancel_label: '<%= Alchemy.t("No") %>',
        hideElements: '<%= Alchemy.t(:hide_elements) %>',
        showElements: '<%= Alchemy.t(:show_elements) %>'
      },
      toolbarButtons: [
        {
          title: '<%= Alchemy.t("New Element") %>',
          label: '<%= Alchemy.t("New Element") %>',
          hotkey: 'alt+n',
          iconClass: 'add-line',
          onClick: function() {
            Alchemy.openDialog('<%= alchemy.new_admin_element_path(page_version_id: @page_version.id) %>', {
              title: '<%= Alchemy.t("New Element") %>',
              size: '320x125'
            });
          }
        },
        {
          title: '<%= Alchemy.t("Clipboard") %>',
          label: '<%= Alchemy.t("Show clipboard") %>',
          iconClass: '<%= clipboard_empty?("elements") ? "clipboard-line" : "clipboard-fill" %>',
          buttonId: 'clipboard_button',
          onClick: function() {
            Alchemy.openDialog('<%= alchemy.admin_clipboard_path(remarkable_type: "elements") %>', {
              title :'<%= Alchemy.t("Clipboard") %>',
              size: '400x305'
            });
          }
        }
      ]
    }, function() {
      Alchemy.SortableElements(<%= @page.id %>, '<%= form_authenticity_token %>');
      if (window.location.hash) {
        $(window.location.hash).trigger('FocusElementEditor.Alchemy');
      }
    });

    Alchemy.PreviewWindow.init(<%== @preview_urls.first %>);

    $('#preview_size').bind('open.selectBoxIt', function (e) {
      $('#top_menu').css('z-index', 5000);
    });

    $('#preview_size').bind('blur.selectBoxIt', function (e) {
      $('#top_menu').css('z-index', 30);
    });

    $('select#preview_size').on('change', function() {
      var width = this.value;
      if (width === 'auto') {
        Alchemy.PreviewWindow.currentWindow.css('width', '');
      } else {
        Alchemy.PreviewWindow.resize(width);
      }
    });
  });

</script>
<% end %>
